
Blinking_4_Leds_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000114  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000144  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   000001b7  00000000  00000000  00000164  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000dc  00000000  00000000  0000031b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000017f  00000000  00000000  000003f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000578  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000001a0  00000000  00000000  0000059c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  0000073c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 5e 00 	jmp	0xbc	; 0xbc <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <avr/delay.h>

int main(void)
{
	DDRA =0b00001111 ;
  6c:	8f e0       	ldi	r24, 0x0F	; 15
  6e:	8a bb       	out	0x1a, r24	; 26
	
    while(1)
    {
        PORTA = 0b00000001 ;
  70:	31 e0       	ldi	r19, 0x01	; 1
        _delay_ms(50)	;
		
		PORTA = 0b00000011 ;
  72:	23 e0       	ldi	r18, 0x03	; 3
		_delay_ms(50)	;
		
		PORTA = 0b00000111 ;
  74:	97 e0       	ldi	r25, 0x07	; 7
{
	DDRA =0b00001111 ;
	
    while(1)
    {
        PORTA = 0b00000001 ;
  76:	3b bb       	out	0x1b, r19	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  78:	e3 ed       	ldi	r30, 0xD3	; 211
  7a:	f0 e3       	ldi	r31, 0x30	; 48
  7c:	31 97       	sbiw	r30, 0x01	; 1
  7e:	f1 f7       	brne	.-4      	; 0x7c <main+0x10>
  80:	00 c0       	rjmp	.+0      	; 0x82 <main+0x16>
  82:	00 00       	nop
        _delay_ms(50)	;
		
		PORTA = 0b00000011 ;
  84:	2b bb       	out	0x1b, r18	; 27
  86:	e3 ed       	ldi	r30, 0xD3	; 211
  88:	f0 e3       	ldi	r31, 0x30	; 48
  8a:	31 97       	sbiw	r30, 0x01	; 1
  8c:	f1 f7       	brne	.-4      	; 0x8a <main+0x1e>
  8e:	00 c0       	rjmp	.+0      	; 0x90 <main+0x24>
  90:	00 00       	nop
		_delay_ms(50)	;
		
		PORTA = 0b00000111 ;
  92:	9b bb       	out	0x1b, r25	; 27
  94:	ff e9       	ldi	r31, 0x9F	; 159
  96:	46 e8       	ldi	r20, 0x86	; 134
  98:	51 e0       	ldi	r21, 0x01	; 1
  9a:	f1 50       	subi	r31, 0x01	; 1
  9c:	40 40       	sbci	r20, 0x00	; 0
  9e:	50 40       	sbci	r21, 0x00	; 0
  a0:	e1 f7       	brne	.-8      	; 0x9a <main+0x2e>
  a2:	00 c0       	rjmp	.+0      	; 0xa4 <main+0x38>
  a4:	00 00       	nop
		_delay_ms(500)	;
		
		PORTA = 0b00001111 ;
  a6:	8b bb       	out	0x1b, r24	; 27
  a8:	6f e9       	ldi	r22, 0x9F	; 159
  aa:	e6 e8       	ldi	r30, 0x86	; 134
  ac:	f1 e0       	ldi	r31, 0x01	; 1
  ae:	61 50       	subi	r22, 0x01	; 1
  b0:	e0 40       	sbci	r30, 0x00	; 0
  b2:	f0 40       	sbci	r31, 0x00	; 0
  b4:	e1 f7       	brne	.-8      	; 0xae <main+0x42>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <main+0x4c>
  b8:	00 00       	nop
  ba:	dd cf       	rjmp	.-70     	; 0x76 <main+0xa>

000000bc <_exit>:
  bc:	f8 94       	cli

000000be <__stop_program>:
  be:	ff cf       	rjmp	.-2      	; 0xbe <__stop_program>
