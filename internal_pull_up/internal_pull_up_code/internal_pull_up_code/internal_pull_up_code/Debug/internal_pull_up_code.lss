
internal_pull_up_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000f6  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000126  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000087  00000000  00000000  00000146  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000053  00000000  00000000  000001cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000000c9  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000015a  00000000  00000000  00000310  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  0000046a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 4f 00 	jmp	0x9e	; 0x9e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#define F_CPU 1000000ul
#include <avr/io.h>

int main(void)
{
	DDRA = 0b00000111 ;
  6c:	87 e0       	ldi	r24, 0x07	; 7
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0b00000000 ;
  70:	14 ba       	out	0x14, r1	; 20
	PORTC = 0b11111111 ;
  72:	8f ef       	ldi	r24, 0xFF	; 255
  74:	85 bb       	out	0x15, r24	; 21
        {
			PORTA = 0b00000011 ;
        }
		else if(PINC == 0b11111011)
		{
			PORTA = 0b00000111 ;
  76:	37 e0       	ldi	r19, 0x07	; 7
        {
			PORTA = 0b00000001 ;
        } 
        else if (PINC == 0b11111101)
        {
			PORTA = 0b00000011 ;
  78:	23 e0       	ldi	r18, 0x03	; 3
	
    while(1)
    {
        if (PINC == 0b11111110)
        {
			PORTA = 0b00000001 ;
  7a:	91 e0       	ldi	r25, 0x01	; 1
	DDRC = 0b00000000 ;
	PORTC = 0b11111111 ;
	
    while(1)
    {
        if (PINC == 0b11111110)
  7c:	83 b3       	in	r24, 0x13	; 19
  7e:	8e 3f       	cpi	r24, 0xFE	; 254
  80:	11 f4       	brne	.+4      	; 0x86 <main+0x1a>
        {
			PORTA = 0b00000001 ;
  82:	9b bb       	out	0x1b, r25	; 27
  84:	fb cf       	rjmp	.-10     	; 0x7c <main+0x10>
        } 
        else if (PINC == 0b11111101)
  86:	83 b3       	in	r24, 0x13	; 19
  88:	8d 3f       	cpi	r24, 0xFD	; 253
  8a:	11 f4       	brne	.+4      	; 0x90 <main+0x24>
        {
			PORTA = 0b00000011 ;
  8c:	2b bb       	out	0x1b, r18	; 27
  8e:	f6 cf       	rjmp	.-20     	; 0x7c <main+0x10>
        }
		else if(PINC == 0b11111011)
  90:	83 b3       	in	r24, 0x13	; 19
  92:	8b 3f       	cpi	r24, 0xFB	; 251
  94:	11 f4       	brne	.+4      	; 0x9a <main+0x2e>
		{
			PORTA = 0b00000111 ;
  96:	3b bb       	out	0x1b, r19	; 27
  98:	f1 cf       	rjmp	.-30     	; 0x7c <main+0x10>
		}
		else
		{
            PORTA = 0b00000000 ;	
  9a:	1b ba       	out	0x1b, r1	; 27
  9c:	ef cf       	rjmp	.-34     	; 0x7c <main+0x10>

0000009e <_exit>:
  9e:	f8 94       	cli

000000a0 <__stop_program>:
  a0:	ff cf       	rjmp	.-2      	; 0xa0 <__stop_program>
